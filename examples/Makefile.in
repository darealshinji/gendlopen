
@APPIND@BIN_APPIND = appindicator$(EXEEXT)
@NOTIFY@BIN_NOTIFY = notify$(EXEEXT)
@MSGBOX@BIN_MSGBOX = msgbox$(EXEEXT)

@CLANG@@NIX@BIN_UUIDNIX = uuid_nix$(EXEEXT)
@CLANG@@W32@BIN_UUIDWIN = uuid_win$(EXEEXT)

BINS = $(BIN_APPIND) $(BIN_NOTIFY) $(BIN_MSGBOX) $(BIN_UUIDNIX) $(BIN_UUIDWIN)


.PHONY: all clean

all: $(BINS)

clean:
	$(_v)-rm -f appindicator notify msgbox uuid_nix
	$(_v)-rm -f *.exe *.o *.obj example_*.h uuid_nix_dl.h uuid_win_dl.h

run_examples: $(BINS)
	$(_v)(set +e ; bins="$(BINS)" ; $(run_tests))

@W32@run_examples_wine: $(BINS)
@W32@	$(_v)(set +e ; bins="$(BINS)" ; $(run_tests_wine))


# appindicator

@APPIND@example_appindicator.h: appindicator.txt
@APPIND@	$(gen_v)$(GENDLOPEN) - < appindicator.txt > $@

@APPIND@example_appindicator_gtk.h: appindicator_gtk.txt
@APPIND@	$(gen_v)$(GENDLOPEN) - < appindicator_gtk.txt > $@

@APPIND@example_appindicator_gobject.h: appindicator_gobject.txt
@APPIND@	$(gen_v)$(GENDLOPEN) - < appindicator_gobject.txt > $@

@APPIND@appindicator: example_appindicator.h example_appindicator_gobject.h example_appindicator_gtk.h appindicator.c
@APPIND@	$(cc_v)$(CC) $(TEST_CFLAGS) -Ithirdparty $(GLIB_CFLAGS) $(GTK_CFLAGS) appindicator.c -o $@ $(TEST_LDFLAGS) $(LIBDL)


# libnotify

@NOTIFY@example_notify.h: notify.txt
@NOTIFY@	$(gen_v)$(GENDLOPEN) notify.txt -force -o $@

@NOTIFY@example_notify_gobject.h: notify_gobject.txt
@NOTIFY@	$(gen_v)$(GENDLOPEN) notify_gobject.txt -force -o $@

@NOTIFY@notify: example_notify.h example_notify_gobject.h notify.c
@NOTIFY@	$(cc_v)$(CC) $(TEST_CFLAGS) -Ithirdparty $(GLIB_CFLAGS) notify.c -o $@ $(TEST_LDFLAGS) $(LIBDL)


# msgbox
@MSGBOX@example_msgbox_gtk.h: msgbox_gtk.txt
@MSGBOX@	$(gen_v)$(GENDLOPEN) msgbox_gtk.txt -force -o $@

@MSGBOX@example_msgbox_sdl.h: msgbox_sdl.txt
@MSGBOX@	$(gen_v)$(GENDLOPEN) msgbox_sdl.txt -force -o $@

@MSGBOX@example_msgbox_x11.h: msgbox_x11.txt
@MSGBOX@	$(gen_v)$(GENDLOPEN) msgbox_x11.txt -force -o $@

@MSGBOX@msgbox: example_msgbox_gtk.h example_msgbox_sdl.h example_msgbox_x11.h msgbox.c
@MSGBOX@	$(cc_v)$(CC) $(TEST_CFLAGS) -Ithirdparty -Ithirdparty/sdl $(GTK_CFLAGS) $(X11_CFLAGS) msgbox.c -o $@ $(TEST_LDFLAGS) $(LIBDL)


# UUID

@CLANG@DUMP_AST = $(CLANG) -Xclang -ast-dump $(CLANG_TARGET) -Wno-pragma-pack $(SYSROOT_INC)

@CLANG@@NIX@uuid_nix_dl.h: uuid_nix.h
@CLANG@@NIX@	$(gen_v)$(DUMP_AST) -Ithirdparty/uuid uuid_nix.h | \
@CLANG@@NIX@	  $(GENDLOPEN) - -force -o $@ -library libuuid.so.1 \
@CLANG@@NIX@	  -Suuid_generate_random -Suuid_is_null -Suuid_unparse_lower

@CLANG@@NIX@uuid_nix: uuid_nix_dl.h uuid_nix.c
@CLANG@@NIX@	$(cc_v)$(CC) $(TEST_CFLAGS) -Ithirdparty/uuid uuid_nix.c -o $@ $(TEST_LDFLAGS) $(LIBDL)

@CLANG@@W32@uuid_win_dl.h: uuid_win.h
@CLANG@@W32@	$(gen_v)$(DUMP_AST) uuid_win.h | \
@CLANG@@W32@	  $(GENDLOPEN) - -force -o $@ -library rpcrt4.dll \
@CLANG@@W32@	  -SUuidCreate -SUuidToStringA -SRpcStringFreeA

@CLANG@@W32@uuid_win$(EXEEXT): uuid_win_dl.h uuid_win.c
@CLANG@@W32@	$(cc_v)$(CC) $(TEST_CFLAGS) uuid_win.c -o $@ $(TEST_LDFLAGS) $(LIBDL)

