
@APPIND@BIN_APPIND = appindicator
@NOTIFY@BIN_NOTIFY = notify

@CLANG@@NIX@BIN_UUIDNIX = uuid_nix
@CLANG@@W32@BIN_UUIDWIN = uuid_win$(EXEEXT)

BINS = $(BIN_APPIND) $(BIN_NOTIFY) $(BIN_UUIDNIX) $(BIN_UUIDWIN)

@W32@WINE = WINEDEBUG=-all wine


all: $(BINS)

clean:
	$(_v)-rm -f notify appindicator uuid_nix
	$(_v)-rm -f *.exe *.o *.obj example_*.h uuid_nix_dl.h uuid_win_dl.h

run_examples: $(BINS)
	$(_v)for x in $(BINS) ; do \
	  echo $$x ; ./$$x ; \
	  echo "return value: $$?" ; echo ; \
	done

@W32@run_examples_wine: $(BINS)
@W32@	$(_v)for x in $(BINS) ; do \
@W32@	  echo $$x ; $(WINE) $$x ; \
@W32@	  echo "return value: $$?" ; echo ; \
@W32@	done


# appindicator

@APPIND@example_appindicator.h: appindicator.txt
@APPIND@	$(gen_v)$(GENDLOPEN) -i appindicator.txt -f -o $@ -n xappindicator -l libappindicator.so.1 --skip-parameter-names

@APPIND@example_appindicator_gtk.h: appindicator_gtk.txt
@APPIND@	$(gen_v)$(GENDLOPEN) -i appindicator_gtk.txt -f -o $@ -n xgtk -l libgtk-x11-2.0.so.0

@APPIND@example_appindicator_gobject.h: appindicator_gobject.txt
@APPIND@	$(gen_v)$(GENDLOPEN) -i appindicator_gobject.txt -f -o $@ -n xgobject -l libgobject-2.0.so.0

@APPIND@appindicator: example_appindicator.h example_appindicator_gobject.h example_appindicator_gtk.h
@APPIND@	$(cc_v)$(CC) $(CFLAGS) -Ithirdparty $(GLIB_CFLAGS) $(GTK_CFLAGS) appindicator.c -o $@ $(LDFLAGS) $(LIBDL)


# libnotify

@NOTIFY@example_notify.h: notify.txt
@NOTIFY@	$(gen_v)$(GENDLOPEN) -i notify.txt -f -o $@ -n xnotify -lapi:4:notify

@NOTIFY@example_notify_gobject.h: notify_gobject.txt
@NOTIFY@	$(gen_v)$(GENDLOPEN) -i notify_gobject.txt -f -o $@ -n xgobject -lapi:0:gobject-2.0

@NOTIFY@notify: example_notify.h example_notify_gobject.h
@NOTIFY@	$(cc_v)$(CC) $(CFLAGS) -Ithirdparty $(GLIB_CFLAGS) notify.c -o $@ $(LDFLAGS) $(LIBDL)


# UUID

@CLANG@@NIX@uuid_nix_dl.h: uuid_nix.h
@CLANG@@NIX@	$(gen_v)$(CLANG) -Xclang -ast-dump -fansi-escape-codes -Ithirdparty/uuid uuid_nix.h | \
@CLANG@@NIX@	  $(GENDLOPEN) -i- -f -o $@ --library libuuid.so.1 \
@CLANG@@NIX@	  -Suuid_generate_random -Suuid_is_null -Suuid_unparse_lower

@CLANG@@NIX@uuid_nix: uuid_nix_dl.h
@CLANG@@NIX@	$(cc_v)$(CC) $(CFLAGS) -Ithirdparty/uuid uuid_nix.c -o $@ $(LDFLAGS) $(LIBDL)

@CLANG@@W32@uuid_win_dl.h: uuid_win.h
@CLANG@@W32@	$(gen_v)$(CLANG) -Xclang -ast-dump -fansi-escape-codes uuid_win.h | \
@CLANG@@W32@	  $(GENDLOPEN) -i- -f -o $@ --library rpcrt4.dll \
@CLANG@@W32@	  -SUuidCreate -SUuidToStringA -SRpcStringFreeA

@CLANG@@W32@uuid_win$(EXEEXT): uuid_win_dl.h
@CLANG@@W32@	$(cc_v)$(CC) $(CFLAGS) uuid_win.c -o $@ $(LDFLAGS) $(LIBDL)

