/* << UTF-8 BOM ignored */

/* testing if the parser can read everything */

# define ZZZ // split line, \
  continued to next line

# define XXX /* comment */ \
  /* continued to next line */ \
  YYY /* multi-line comment begin
 *
 *
 * multi-line comment end */

// /* comment within comment */

/* //comment within comment */

/* multi-line
 * comment
 */

// multi-line \
   comment

/\ 
/ split
/\
* split too *\
/

/* empty statements ignored */;;;

/* typedefs, structs, unions and enums are ignored */
typedef int myint_t;

typedef struct _mystruct {
  struct struct_A { /* nested structs */
    int a;
    int b;
  };
  struct struct_B {
    int a;
    int b;
  };
  long l;
  int i;
} mystruct_t;

struct mystruct {
  long l;
  int i;
};

union myunion {
  struct struct_A;
  struct struct_B;
};

enum {
  E_ENTRY_1 = 1,
  E_ENTRY_2 = 2,
  E_ENTRY_3 = 3
};


/* no parameters */
helloworld *(helloworld_init) (  );

/* parentheses around pointer, name and parameters */
helloworld (
  /* array in parameters */
  *helloworld_init_argv(int argc, char *argv[])
);

/* non-typedef'd function pointer, extra parentheses */
void (*helloworld_callback) (((const char*)));

/* array type, 'extern' keyword */
extern char helloworld_buffer[64];

/* function name within parentheses */
void (helloworld_hello)(helloworld *hw);

/* multi-line declaration */
void helloworld_hello2(helloworld *hw,
#define IGNORE_THIS_LINE
    /* non-typedef'd function pointer */
    void ( * callback_function ) (const char*)
);

/* variable argument lists */
int helloworld_fprintf(FILE *stream, const char *format, ...);

/* single letter parameter name, missing semicolon */
void helloworld_release (helloworld * p)
